

geonode:
  image:
    name: geonode/geonode
    tag: '3.1'
  # You can use this to pass any env from https://docs.geonode.org/en/master/basic/settings/index.html
  extraEnvs:
    CLIENT_RESULTS_LIMIT: '25'
  # Extra env vars to pass to geonode container - will be passed as a secret
  extraSecretEnvs: {}
  # Can be used to configure new base maps or any other setting from https://github.com/GeoNode/geonode/blob/master/geonode/settings.py
  # For base maps available in MapStore, see https://github.com/geosolutions-it/MapStore2/blob/master/web/client/utils/ConfigProvider.js
  extraConf: |
    EXTRA_BASE_LAYERS = [
      {
        "type": "tileprovider",
        "title": "OpenStreetMap Terrain",
        "thumbURL": "https://a.tile-cyclosm.openstreetmap.fr/cyclosm/10/594/518.png",
        "provider": "custom",
        "name": "cyclosm",
        "group": "background",
        "visibility": False,
        "url": "https://{s}.tile-cyclosm.openstreetmap.fr/cyclosm/{z}/{x}/{y}.png",
        "options": {
          "subdomains": [ "a", "b", "c" ]
        }
      },
      {
        "type": "tileprovider",
        "title": "OpenStreetMap B&W",
        "thumbURL": "https://tiles.wmflabs.org/bw-mapnik/0/0/0.png",
        "provider": "OpenStreetMap.BlackAndWhite",
        "name": "osmbw",
        "group": "background",
        "visibility": False
      },
      {
        "type": "tileprovider",
        "title": "CartoDB Light",
        "thumbURL": "https://a.basemaps.cartocdn.com/light_all/0/0/0.png",
        "provider": "CartoDB.Positron",
        "name": "cartol",
        "group": "background",
        "visibility": False
      },
      {
        "type": "tileprovider",
        "title": "Stamen Watercolor",
        "provider": "Stamen.Watercolor",
        "name": "Stamen.Watercolor",
        "source": "Stamen",
        "group": "background",
        "thumbURL": "https://stamen-tiles-c.a.ssl.fastly.net/watercolor/0/0/0.jpg",
        "visibility": False
      }
    ]

    MAPSTORE_BASELAYERS =  EXTRA_BASE_LAYERS + MAPSTORE_BASELAYERS

  extraConf2: |
    SOCIALACCOUNT_PROVIDERS['google'] = {
      'SCOPE': [
        'profile',
        'email',
      ],
      'AUTH_PARAMS': {
        'access_type': 'online',
      }
    }

    INSTALLED_APPS += ('allauth.socialaccount.providers.google',)


geoserver:
  image:
    name: geonode/geoserver
    tag: '2.17.4'
  # A list of one-line custom EPSGs to add to GeoServer
  # see https://docs.geoserver.org/stable/en/user/configuration/crshandling/customcrs.html
  customEPSGs:
    - 1=PROJCS["TM_Rwanda",GEOGCS["GCS_ITRF_2005",DATUM["D_ITRF_2005",SPHEROID["GRS_1980",6378137.0,298.257222101]],PRIMEM["Greenwich",0.0],UNIT["Degree",0.0174532925199433]],PROJECTION["Transverse_Mercator"],PARAMETER["False_Easting",500000.0],PARAMETER["False_Northing",5000000.0],PARAMETER["Central_Meridian",30.0],PARAMETER["Scale_Factor",0.9999],PARAMETER["Latitude_Of_Origin",0.0],UNIT["Meter",1.0]]
  extraCustomEPSGs: []

general:
  externalDomain: example.com
  externalScheme: https
  externalPort: 443
  debug: false
  serviceType: NodePort
  # This user will have access to geonode UI but also the built-in Django admin interface (/admin)
  # Username is admin
  superUser:
    password: geonode
    email: support@example.com
  supportEmail: support@example.com
  storageSize: 10Gi
  serviceType: ClusterIP

ingress:
  enabled: false
  # Those are passed straight to the ingress
  annotations: {}
  tls: {}

smtp:
  host: smtp.gmail.com
  tls: true
  port: '587'
  user: 
  password: "changeme"
  from: 

global:
  # Will be used by this and all subcharts
  storageClass: standard

postgresql:
  enabled: true
  # The usernames will be the same as the database names
  geonodeDb: geonode
  geodataDb: geonode_data
  # Override this!
  password: Uxu3UhxFmK

  # TODO: support external db
  # For now we only support a db installed with a subchart

  # Standard postgres chart values
  # See https://artifacthub.io/packages/helm/bitnami/postgresql for docs
  # Override this!
  postgresqlPassword: admin
  initdbScriptsSecret: '{{ .Release.Name }}-postgres-init'

rabbitmq:
  auth:
    username: user
    # Override these!
    password: 3asgDlgwN7
    erlangCookie: jixYBsiZ9RivaLXC02pTwGjvIo0nHtVu
